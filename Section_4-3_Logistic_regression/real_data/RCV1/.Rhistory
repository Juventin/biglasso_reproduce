rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
require(glmnet)
require(biglasso)
data(colon)
X <- colon$X
y <- colon$y
dim(X)
X[1:5, 1:5]
y
## convert X to a big.matrix object
X.bm <- as.big.matrix(X)
str(X.bm)
dim(X.bm)
X.bm[1:5, 1:5]
## fit a logistic regression model, using screening rule "SSR-Slores"
fit <- biglasso(X.bm, y, family = "binomial", screen = "SSR-Slores")
plot(fit)
coef(fit, lambda = 0.05)
predict(fit, X = X.bm, type = "nvars")
predict(fit, X = X.bm, lambda = c(0.1, 0.05), type = "nvars")
predict(fit, X = X.bm, lambda = 0.05, type = "class")
plot(fit, log.l = FALSE)
## 10-fold cross-valiation in parallel
cvfit <- cv.biglasso(X.bm, y, family = "binomial", screen = "SSR-Slores",
seed = 1234, nfolds = 10, ncores = 4)
# png(filename = "jss_data_example_cv.png", width = 7, height = 6, units = "in", res = 120)
pdf(file = "JSS_data_example_cv.pdf", width = 7, height = 6)
par(mfrow = c(2, 2), mar = c(3.5, 3.5, 3, 1) ,mgp = c(2.5, 0.5, 0))
plot(cvfit, type = "all")
dev.off()
plot(cvfit$fit, log.l = FALSE)
abline(v = cvfit$lambda.min, col = 2, lty = 2)
pdf(file = "JSS_data_example.pdf", width = 7, height = 6)
plot(cvfit$fit)
abline(v = log(cvfit$lambda.min), col = 2, lty = 2)
dev.off()
rm(list = ls())
gc()
require(biglasso)
setwd("~/GitHub/biglasso_experiment/real_data/GWAS_big_data/SSR-BEDPP/")
load("2016-11-22_ncores=4.RData")
plot(fit.ssr.bedpp4, log.l = FALSE)
pdf(file = "GWAS-solution-path-linear.pdf", width = 7, height = 6)
plot(fit.ssr.bedpp4, log.l = FALSE)
dev.off()
rm(list = ls())
gc()
setwd("~/GitHub/biglasso_experiment/real_data_logistic/gisette/")
source("../real_utilities_logistic.R")
load("gisette_scale_full_sparse_data.RData")
## remove features with frequency less than 10
# col.idx <- which(nnz.per.col > 10)
load("n=5000/2017-04-30_news20_1e-06_Results.RData")
ls()
dim(X)
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/Gisettle/")
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/P53/")
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
# setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/P53/")
source("../real_utilities_logistic.R")
load("p53_old_processed_data.RData")
n <- nrow(X)
p <- ncol(X)
X.bm <- attach.big.matrix(descriptorfile)
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/P53/")
source("../real_utilities_logistic.R")
load("p53_old_processed_data.RData")
n <- nrow(X)
p <- ncol(X)
X.bm <- attach.big.matrix(descriptorfile)
X.bm <- attach.big.matrix(descriptorfile)
X.bm
dim(X.bm)
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/NEWS20/")
source("../real_utilities_logistic.R")
load("new20_full_sparse_data.RData")
## remove features with frequency less than 10
col.idx <- which(nnz.per.col > 10)
X.raw <- X[, col.idx]
y.raw <- y
rm(X, y)
gc()
dim(X.raw)
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/NEWS20/")
source("../real_utilities_logistic.R")
load("new20_full_sparse_data.RData")
## remove features with frequency less than 10
col.idx <- which(nnz.per.col > 10)
X.raw <- X[, col.idx]
dim(x.raw)
y.raw <- y
rm(X, y)
gc()
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/NEWS20/")
source("../real_utilities_logistic.R")
load("new20_full_sparse_data.RData")
## remove features with frequency less than 10
col.idx <- which(nnz.per.col > 10)
X.raw <- X[, col.idx]
dim(X.raw)
y.raw <- y
rm(X, y)
gc()
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
# setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/Gisettle/")
source("../real_utilities_logistic.R")
load("gisette_scale_full_sparse_data.RData")
X.raw <- X
y.raw <- y
rm(X, y, res)
gc()
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/Gisettle/")
source("../real_utilities_logistic.R")
load("gisette_scale_full_sparse_data.RData")
X.raw <- X
y.raw <- y
rm(X, y, res)
gc()
dim(X.raw)
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/RCV1/")
rm(list = ls())
gc()
# Assume current working directory set to be folder "JSS_biglasso_reproduce/"
setwd("~/GitHub/biglasso_experiment/JSS_biglasso_reproduce/")
setwd("./Section_4-3_Logistic_regression/real_data/RCV1/")
source("../real_utilities_logistic.R")
load("rcv1_full_sparse_data.RData")
X.raw <- X
y.raw <- y
rm(X, y)
gc()
dim(X.raw)
